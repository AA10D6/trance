Prerequisites:

- Visual Studio 2013 or newer
- CMake
- Mingw/MSYS (with 64-bit support if necessary)
- YASM (download standalone exe for 32- or 64-bit Windows)

Trance can be built in Debug or Release mode, and Win32 or x64 platform.
Clone all the dependencies (run "git submodule update --init").
Build all the dependencies:

gflags
- Use CMake to generate project files using the "Visual Studio 12 2013" setting
  in a subfolder called "gflags\Win32".
- Use CMake to generate project files using the "Visual Studio 12 2013 Win64"
  setting in a subfolder called "gflags\x64".
- gflags should be built as a static library. This is the default.
- Build the libraries from the project files in the subfolders.

glew_1_10_0
- Has project files in glew_1_10_0\build\vc10.
- Upgrade these project files and build them.
- You might need to edit down the length of one string in glew.rc.

libovr_0_4_4
- Has project files in libovr_0_4_4\Projects\Win32\VS2013.

protobuf
- Has project files in protobuf\vsprojects.

libvpx
- Make subfolders "libvpx\Win32" and "libvpx\x64".
- From MSYS shell in libvpx\Win32 folder, run
  "../configure --target=x86-win32-vs12 && make".
- From MSYS shell in libvpx\x86 folder, run
  "../configure --target=x86_64-win64-vs12 && make".
- Copy yasm.exe into both subfolders ("libvpx\Win32" and "libvpx\x64").
- Build the libraries from project files in the subfolders.

libwebm
- Use CMake to generate project files using the "Visual Studio 12 2013" setting
  in a subfolder called "libwebm\Win32".
- Use CMake to generate project files using the "Visual Studio 12 2013 Win64"
  setting in a subfolder called "libwebm\x64".
- libwebm should be built as a static library. This is the default.
- Edit the generated project files, changing the "Runtime Library" option from
  "Multi-threaded" to "Multi-threaded DLL" (and "Multi-threaded Debug" to
  "Multi-threaded Debug DLL") in each project. This option is in
  "C++ -> Code Generation".
- Build the libraries from the project files in the subfolders.

sfml
- Use CMake to generate project files using the "Visual Studio 12 2013" setting
  in a subfolder called "sfml\Win32".
- Use CMake to generate project files using the "Visual Studio 12 2013 Win64"
  setting in a subfolder called "sfml\x64".
- sfml should be built as a dynamic library. This is the default.
- Build the libraries from the project files in the subfolders.

x264
- Copy yasm.exe into the x264 folder.

- From MSYS shell in x264 folder, run
  "./configure --prefix=./Win32/Debug --host=i686-pc-mingw32 --enable-shared
   --enable-debug --extra-ldflags=-Wl,--output-def=libx264.def &&
   make && make install".
- From Visual Studio Command Prompt in x264 folder, run
  "LIB /DEF:libx264.def /MACHINE:X86 && move libx264.lib Win32\Debug\lib".

- From MSYS shell in x264 folder, run
  "./configure --prefix=./Win32/Release --host=i686-pc-mingw32 --enable-shared
   --extra-ldflags=-Wl,--output-def=libx264.def && make && make install".
- From Visual Studio Command Prompt in x264 folder, run
  "LIB /DEF:libx264.def /MACHINE:X86 && move libx264.lib Win32\Release\lib".

- From (64-bit) MSYS shell in x264 folder, run
  "./configure --prefix=./x64/Debug --host=x86_64-pc-mingw32 --enable-shared
   --enable-debug --extra-ldflags=-Wl,--output-def=libx264.def &&
   make && make install".
- From Visual Studio Command Prompt in x264 folder, run
  "LIB /DEF:libx264.def /MACHINE:X64 && move libx264.lib x64\Debug\lib".

- From (64-bit) MSYS shell in x264 folder, run
  "./configure --prefix=./x64/Release --host=x86_64-pc-mingw32 --enable-shared
  --extra-ldflags=-Wl,--output-def=libx264.def && make && make install".
- From Visual Studio Command Prompt in x264 folder, run
  "LIB /DEF:libx264.def /MACHINE:X64 && move libx264.lib x64\Release\lib".

Everything should now be set up correctly and installed in the right place to
build Trance from project files in the root.
